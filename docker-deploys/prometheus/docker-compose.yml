version: '3'
services:
        prom:
                image: prom/prometheus:v2.21.0
                # build:
                #         context: ./prom
                #         dockerfile: Dockerfile
                ports:
                        - 9090:9090
                volumes:
                        - /services/containers/public-apps/docker-deploys/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
                        # - /data/prom/config/alert.rules:/alertmanager/alert.rules
                        - /services/data/prom/data:/prometheus
                          #                networks:
                          #                        - monitoring
                # environment: 
                #         NAME: "${NAME}"
                container_name: prom
                hostname: 'prom'
                restart: "no"
#####
        # # snmp_exporter:
        # #         image: prom:snmp-generator
        alertmanager:
                image: prom/alertmanager:v0.21.0
                # build:
                #         context: ./alertman
                #         dockerfile: Dockerfile
                ports:
                        - 9093:9093
                volumes:
                        - /services/containers/public-apps/docker-deploys/prometheus//alertman/alertmanager.yml:/alertmanager.yml
                command:
                        - '--config.file=/alertmanager.yml'
                container_name: alertman
                hostname: alertman
                restart: "no"
        # grafana:
        #         depends_on:
        #                 - prom
        #         image: grafana/grafana:7.2.0
        #         # build:
        #         #         context: ./grafana
        #         #         dockerfile: Dockerfile
        #         ports:
        #                 - 3000:3000
        #         volumes:
        #                 - ./grafana:/var/lib/grafana
        #                 # - /usr/src/docker/grafana:/var/lib/grafana
        #                   #                networks:
        #                   #                        - monitoring
        #         container_name: grafana
        #         hostname: 'grafana'
        #         restart: "no"   